{"version":3,"sources":["components/Header.js","components/Footer.js","components/Form.js","components/Results.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","Form","props","handler","headers","handleMethod","e","buttonsArray","document","querySelectorAll","forEach","item","classList","contains","remove","innerText","target","add","btnColor","getBtn","querySelector","selectedBtn","data-testid","className","onSubmit","preventDefault","url","children","value","fetch","then","row","get","json","data","header","error","type","id","onClick","Results","result","console","log","src","Headers","theme","Response","App","updateState","results","setState","state","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.faf3f95c.chunk.js","sourcesContent":["import React from 'react';\nimport '../scss/header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport '../scss/footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>&copy; 2020 Saif</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport '../scss/form.scss';\n\nfunction Form(props) {\n  const { handler } = props;\n  let headers = '';\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const url = e.target.children[0].value;\n    if (url) {\n      fetch(url).then((row) => {\n        headers = row.headers.get('Content-Type');\n        row.json().then((data) => {\n          btnColor();\n          handler({\n            header: headers,\n            data: data\n          });\n        });\n      });\n    } else {\n      handler({\n        error: 'Please Enter a URL'\n      });\n    }\n  };\n\n  const handleMethod = (e) => {\n    const buttonsArray = document.querySelectorAll('button');\n    [...buttonsArray].forEach((item) => {\n      if (item.classList.contains('choiceBtn')) {\n        item.classList.remove('choiceBtn');\n      }\n\n      if (item.innerText === e.target.innerText) {\n        item.classList.add('choiceBtn');\n      }\n    });\n  };\n\n  const btnColor = () => {\n    const getBtn = document.querySelector('#first');\n    const selectedBtn = document.querySelector('button.choiceBtn');\n    if (selectedBtn) {\n      selectedBtn.classList.remove('choiceBtn');\n    }\n    getBtn.classList.add('choiceBtn');\n  };\n\n  return (\n    <>\n      <form data-testid='form' className='row' onSubmit={handleSubmit}>\n        <input data-testid='input-text' type='text' />\n        <input type='submit' value='GO!' />\n      </form>\n      <div id='user-choices'>\n        <button id='first' onClick={handleMethod}>\n          GET\n        </button>\n        <button onClick={handleMethod}>POST</button>\n        <button onClick={handleMethod}>DELETE</button>\n        <button onClick={handleMethod}>UPDATE</button>\n      </div>\n    </>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nfunction Results({ header, result, error }) {\n  console.log(header);\n  console.log(error);\n  if (header) {\n    return (\n      <>\n        <div className='user-choice'>\n          <div>\n            <h2>Headers</h2>\n            <ReactJson src={{ Headers: header }} theme='monokai' />\n          </div>\n          <div>\n            <h2>Results</h2>\n            <ReactJson src={{ Response: result }} theme='monokai' />\n          </div>\n        </div>\n      </>\n    );\n  } else if (error) {\n    return (\n      <div className='user-choice'>\n        <h2>{error}</h2>\n      </div>\n    );\n  } else {\n    return <div className='user-choice'></div>;\n  }\n}\n\nexport default Results;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Form from './Form';\nimport RESULTS from './Results';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '',\n      header: '',\n      error: ''\n    };\n  }\n\n  updateState = (results) => {\n    if (results.data || results.header) {\n      this.setState({\n        result: results.data,\n        header: results.header\n      });\n    } else {\n      this.setState({\n        error: results.error\n      });\n    }\n  };\n\n  render() {\n    const { result, header, error } = this.state;\n    return (\n      <>\n        <Header />\n        <Form handler={this.updateState} />\n        <RESULTS header={header} result={result} error={error} />\n        <Footer />\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/style.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}